{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"pod",
				"pod_dict"
			],
			[
				"di",
				"div	Tag"
			],
			[
				"book",
				"book_title"
			],
			[
				"re",
				"references"
			],
			[
				"red",
				"referrer_podcast_id"
			],
			[
				"is",
				"is_podast"
			],
			[
				"get_",
				"get_by_id"
			],
			[
				"refe",
				"referrer"
			],
			[
				"podca",
				"podcast_id"
			],
			[
				"lo",
				"logging"
			],
			[
				"rfe",
				"referrer"
			],
			[
				"refer",
				"reference"
			],
			[
				"all",
				"all_reference_keys"
			],
			[
				"process",
				"process_podcast_page"
			],
			[
				"parent",
				"parent_db"
			],
			[
				"string",
				"StringProperty"
			],
			[
				"podcas",
				"podcast"
			],
			[
				"com",
				"compile"
			],
			[
				"pare",
				"parent_db"
			],
			[
				"Id",
				"ids"
			],
			[
				"S",
				"StructureProperty"
			],
			[
				"po",
				"podcastDB_name"
			],
			[
				"margin",
				"margin-bottom"
			],
			[
				"font",
				"font-size"
			],
			[
				"render",
				"render_kwargs"
			],
			[
				"rend",
				"render_kwargs"
			],
			[
				"la",
				"lat"
			],
			[
				"locat",
				"location_dict"
			],
			[
				"de",
				"default_user_location"
			],
			[
				"ip",
				"ip_address"
			],
			[
				"def",
				"default"
			],
			[
				"user",
				"user_location"
			],
			[
				"L",
				"Location"
			],
			[
				"loc",
				"location_json"
			],
			[
				"xml",
				"xml_doc"
			],
			[
				"api",
				"api_return"
			],
			[
				"req",
				"request"
			],
			[
				"comm",
				"comment"
			],
			[
				"in",
				"indexed"
			],
			[
				"marin",
				"margin"
			],
			[
				"op",
				"opacity"
			],
			[
				"scro",
				"scrollTop"
			],
			[
				"back",
				"back-to-top"
			],
			[
				"bac",
				"back-to-top"
			],
			[
				"ad",
				"admin_emails"
			],
			[
				"bord",
				"border-color"
			],
			[
				"bo",
				"border-style"
			],
			[
				"text",
				"text-align"
			],
			[
				"use",
				"user_query"
			],
			[
				"paddin",
				"padding-left"
			],
			[
				"get",
				"get_user"
			],
			[
				"dlee",
				"delete_message"
			],
			[
				"bor",
				"border-color"
			],
			[
				"dele",
				"delete_message"
			],
			[
				"dle",
				"delete_message"
			],
			[
				"tet",
				"text-indent"
			],
			[
				"ba",
				"background-color"
			],
			[
				"delet",
				"delete_key"
			],
			[
				"dlete",
				"delete_key"
			],
			[
				"p",
				"parent"
			],
			[
				"stage_",
				"stage_query"
			],
			[
				"Comm",
				"Comment"
			],
			[
				"stag",
				"stages_query"
			],
			[
				"COmmen",
				"CommentBook"
			],
			[
				"Com",
				"Comment"
			],
			[
				"Comment",
				"CommentBook"
			],
			[
				"co",
				"commentsforhtml"
			],
			[
				"sat",
				"stage3"
			],
			[
				"stage",
				"stage2"
			],
			[
				"comment",
				"comments"
			],
			[
				"pos",
				"pos-f	position: fixed;"
			],
			[
				"temp",
				"temp_path"
			],
			[
				"pa",
				"path"
			],
			[
				"templa",
				"template_name"
			],
			[
				"m",
				"MainHandler"
			],
			[
				"te",
				"template_values"
			],
			[
				"tem",
				"template_vars"
			],
			[
				"padd",
				"padding-left"
			],
			[
				"h",
				"height"
			],
			[
				"list",
				"list-style"
			],
			[
				"fi",
				"FizzbuzzHandler"
			],
			[
				"ren",
				"render"
			],
			[
				"requ",
				"RequestHandler"
			],
			[
				"r",
				"request"
			],
			[
				"wr",
				"write"
			],
			[
				"write",
				"write_form"
			],
			[
				"us",
				"user_year"
			],
			[
				"vali",
				"valid_year"
			],
			[
				"valid",
				"valid_day"
			],
			[
				"ac",
				"action	Attr"
			],
			[
				"fo",
				"form	Tag"
			],
			[
				"__",
				"__init__"
			],
			[
				"c",
				"current_height"
			],
			[
				"pad",
				"padding"
			],
			[
				"mar",
				"margin"
			],
			[
				"border",
				"border-radius"
			],
			[
				"z",
				"z-index"
			],
			[
				"wid",
				"width"
			],
			[
				"l",
				"li	Tag"
			],
			[
				"fon",
				"font-weight"
			],
			[
				"sp",
				"span	Tag"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "<!DOCTYPE html>\n<html >\n	<head>\n	    <meta charset=\"UTF-8\">\n	    <link type=\"text/css\" rel=\"stylesheet\" href=\"/stylesheets/style.css\" />\n	    <script type=\"text/javascript\" src=\"../js/jquery.js\" ></script>\n	    <title>{% block title %}{% endblock %}</title>\n	</head>\n\n	<body>\n		{% include 'header.html' %}\n\n		<div class=\"back-to-top\">\n			<a href=\"#\" class=\"back-to-top-text\">Back To Top</a>\n		</div>\n\n		{% block content %}\n		{% endblock %}\n\n		<script src=\"../js/myjs.js\"></script>\n	</body>\n</html>",
			"file": "templates/base.html",
			"file_size": 519,
			"file_write_time": 131035371898121479,
			"settings":
			{
				"buffer_size": 497,
				"line_ending": "Windows"
			}
		},
		{
			"file": "templates/header.html",
			"settings":
			{
				"buffer_size": 660,
				"line_ending": "Windows"
			}
		},
		{
			"file": "templates/home.html",
			"settings":
			{
				"buffer_size": 478,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "{% extends 'base.html' %}\n\n{% block title %}references {% endblock %}\n\n{% block content %}\n    <div>\n        <h2>Hello World!!</h2>\n    </div>\n\n    <div>\n        {% for item in references %}\n            <div class=\"lesson-idea\">\n                <h3>Title : {{ item.title }}  <span style=\"margin: 0 100px\">Author : {{ item.author }}</span> </h3>\n                <p>counter: {{ item.counter }}<br/>\n                link : {{ item.href }}<br/>\n                referrers :</p>\n                {% for ref in item.referrer %}\n                {{ podcasts[ref][0] }}\n                {% endfor %}\n\n            </div>\n        {% endfor %}\n    </div>\n{% endblock content %}\n\n\n\n\n\n\n\n\n\n\n\n",
			"file": "templates/references.html",
			"file_size": 709,
			"file_write_time": 131036309054928265,
			"settings":
			{
				"buffer_size": 674,
				"line_ending": "Windows"
			}
		},
		{
			"file": "db_classes.py",
			"settings":
			{
				"buffer_size": 1455,
				"line_ending": "Windows"
			}
		},
		{
			"file": "cron.yaml",
			"settings":
			{
				"buffer_size": 132,
				"line_ending": "Windows"
			}
		},
		{
			"file": "main.py",
			"settings":
			{
				"buffer_size": 2427,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "#-------------------------------------------------------------------------------\n# Name:        module1\n# Purpose:\n#\n# Author:      Iain Forrest\n#\n# Created:     17/01/2016\n# Copyright:   (c) Iain Forrest 2016\n# Licence:     <your licence>\n#-------------------------------------------------------------------------------\n\nimport logging\nimport webapp2\nimport urllib2, contextlib, re\nimport htmlentitydefs\n\nfrom db_classes import *  #import all the classes defined in db_classes\n\nhttp_list = ['http://fourhourworkweek.com/podcast/']\n\npodcast_find_pattern = '''\n        <p\\s            #search through html for <p with trailing whitespace\n        id=\"post-       #whitespace is followed by a post ids\n        ([0-9]{5})\"     #Match the 5 number post id and store that\n        .*?<a\\shref=    #Skip any extra characters including newlines until a link is found\n        \"(.*?)\"         #Match the http link inside the \"\"\n        .*?>            #Skip any other characters in the <a> tag. ie. target=\"_blank\"\n        (.*?)<\\/a>      #Match the text before the </a> as the title\n        .*?<\\/p>        #move to end of the post paragraph\n        '''\n\nbook_find_pattern = '''\n        a\\shref=\"  #looks for list item with link\n        (http:\\/\\/.*?) #gets all books, post, audiobooks\n                #adds the above selection to tuple\n        \".*?>   #\n        (.*?)       #selects the name of the book inside the link\n        <\\/a>       #searches for end of link followed by\n        \\sby\\s      # _by_ which points to a book and not a movie or other\n        (\\w+\\W\\w+)  #selects the authors names word_space_ word\n        <\\/li>      #followed by end of line\n        '''\n\nsecond_book_patern = '''\n        <a\\shref=\"\n        (.*?\")\n        .*?>\n        (.*?)$\n        '''\n\ndb_parent_pattern = 'http\\:\\/\\/w*\\.?(.*?)\\.com' #matches with or without www\n\n\ndef podcastdb_key(podcastDB_name = 'fourhourworkweek'):\n    '''Constructs a Datastore key for the DB entry'''\n    return ndb.Key('PodcastDB', podcastDB_name)\n\n\ndef unescape(text):\n    '''Copied from http://effbot.org/zone/re-sub.htm#unescape-html\n    uses re to search through the string and use the internal function fixup\n    to substitute the unicode elements for there character equivilents'''\n    def fixup(m):\n        text = m.group(0)\n        if text[:2] == \"&#\":\n            # character reference\n            try:\n                if text[:3] == \"&#x\":\n                    return unichr(int(text[3:-1], 16))\n                else:\n                    return unichr(int(text[2:-1]))\n            except ValueError:\n                pass\n        else:\n            # named entity\n            try:\n                text = unichr(htmlentitydefs.name2codepoint[text[1:-1]])\n            except KeyError:\n                pass\n        return text # leave as is\n    return re.sub(\"&#?\\w+;\", fixup, text)\n\n\ndef get_database_id(parent_db):\n    db_query = Podcast.query(ancestor=podcastdb_key(parent_db)).order\n\n\ndef get_page(url):\n    '''returns unescaped html text from url and\n    domain name for the ancestor ndb name'''\n    parent_db = get_re(db_parent_pattern, url, '', 'search')\n    with contextlib.closing(urllib2.urlopen(url)) as page:\n        main_page = unescape(page.read().decode('utf-8'))\n    try:\n        start = main_page.index('<article')\n        finish = main_page.index('</article')\n    except ValueError:\n        try:\n            start = main_page.index('<body')\n            finish = main_page.find('</body')\n        except ValueError:\n            start, finish = 0,len(main_page)\n    else:\n        main_page = main_page[start:finish]\n        main_page = main_page.replace(u'\\xa0',u' ') #remove bytecode space to space\n    return main_page, parent_db\n\ndef get_re(pattern, text, flags='', re_type='findall'):\n    '''An abstracted regex function for multi-types\n    Flags are added in the form (?sx) and concat with pattern before compile\n    Currently only set for re_type=='search' and 'findall'(default)\n    Function returns a string if search and a list of strings in findall or None'''\n    pattern = pattern + flags\n    expression = re.compile(pattern)\n    if re_type == 'search':\n        result = expression.search(text)\n        return result.group(1) if result else None #checks for result and returns string if found and none if not\n    elif re_type =='findall':\n        result = expression.findall(text)\n    else: result = None\n    return result if result else None\n\ndef strip_tag(book):\n    book_href, book_title, book_author = book\n    TAG_RE = re.compile(r'<[^>]+>') #remove html tags in title\n    book_title = TAG_RE.sub('', book_title)\n    tag_start = book_href.find(u'?tag')#remove affiliate link in href\n    if tag_start != -1:\n        book_href = book_href[:tag_start]\n    return (book_href, book_title, book_author)\n\n\ndef look_for_multi_books(list_of_books):\n    for book in list_of_books:\n        if '<a href' in book[1]:\n            book_index = list_of_books.index(book)\n            href, title, author = list_of_books.pop(book_index)\n            try:\n                second = get_re(second_book_patern, title, '(?x)', 'findall')[0]\n                new_book = (second[0],second[1],author)\n                first_book = (href, title[:title.find('</a>')], author)\n            except TypeError:\n                new_book = None\n            else:\n                if new_book:\n                    list_of_books.insert(book_index, new_book) # this places the new book after the first which means\n                    #if there is more than two it's keep reducing until all books are extracted.\n                    list_of_books.insert(book_index, first_book)\n    return [strip_tag(book) for book in list_of_books]\n\ndef get_books_from_page(podcast_html_page):\n    '''given a podcast show notes page, extract the parent db and the list of books.\n    Assuming that books come in the format of a list, amazon link, title, ' by ' author\n    Books are returned as list of tuples (href, title, author)\n    '''\n    pod_page, parent_db = get_page(podcast_html_page)\n    books = get_re(book_find_pattern, pod_page, '(?x)', 'findall')\n    if books: books = look_for_multi_books(books)\n    return books, parent_db\n\ndef add_books_to_db(list_of_books, referrer_podcast_id):\n    '''go through list, check if in dict, if so increase counter by 1 and add referrer id to list\n    else add book to dict\n    '''\n    #all_reference_keys = Reference.query().fetch(keys_only=True)\n\n    for href, title, author in list_of_books:\n        reference = Reference.get_by_id(title)\n        if reference and referrer_podcast_id not in reference.referrer:\n            reference.counter +=1\n            reference.referrer.append(referrer_podcast_id)\n        else:\n            reference = Reference(id=title, title=title, author = author, href = href, referrer = [referrer_podcast_id])\n        reference.put()\n\n\ndef process_podcast_page(podcast):\n    #some code goes in here\n    books, parent_db = get_books_from_page(podcast.href)\n    podcast_id = podcast.key.id()\n    #logging.info('the vale of key.id() is : ' +str(podcast_id))\n    #logging.info('and is type : ' + str(type(podcast_id)))\n    if books: add_books_to_db(books,podcast_id)\n\n\ndef process_matches(matched_podcasts, parent_db):\n    '''Query the datastore for all podcast keys,\n    then loop through the podcasts found from get_page(url) and check to see if the\n    key is in the datastore. If not then assign the details collected from the home page\n    then follow the link, extract the other info and also create recommended books\n    before moving onto the next podcast in the list\n    '''\n    #all_podcast_keys = Podcast.query().fetch(keys_only=True) #get all podcast keys\n\n    for pod_id, pod_href, pod_title in matched_podcasts:\n        is_podcast = Podcast.get_by_id(pod_id)\n        if not is_podcast and pod_id != '13321': #if not then process now\n            podcast = Podcast(parent= podcastdb_key(parent_db),\n            id=pod_id, #podcast id from post\n            href = pod_href,   #http:// link from post\n            title = pod_title)  #title from between <a>*</a> tags\n\n            process_podcast_page(podcast) #currenty just add books to db\n            #in future see below\n            '''\n            imghref, person, reflist = process_podcast_page(podcast.href)\n#need to create process_podcast_page\n            podcast.image_href = imghref\n            podcast.interviewee = person\n            podcast.references = reflist\n            '''\n            podcast.put()\n\n\n\n\n\nclass MainHandler(webapp2.RequestHandler):\n    def get(self):\n        for http in http_list:\n            #logging.info('This is just for information : ' + http)\n            main_page, parent = get_page(http)\n            podcasts = get_re(podcast_find_pattern, main_page, '(?xs)','findall')\n            #above returns list of podcasts in tuple [(id,href,title),...]\n            if podcasts: process_matches(podcasts, parent)\n\napp = webapp2.WSGIApplication([\n    ('/podcast-check/check',MainHandler)\n], debug=True)\n\n\n",
			"file": "recommedia.py",
			"file_size": 8999,
			"file_write_time": 131036294061390684,
			"settings":
			{
				"buffer_size": 8999,
				"line_ending": "Unix"
			}
		},
		{
			"file": "app.yaml",
			"settings":
			{
				"buffer_size": 459,
				"line_ending": "Windows"
			}
		},
		{
			"file": "stylesheets/style.css",
			"settings":
			{
				"buffer_size": 2475,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 490.0,
		"last_filter": "com",
		"selected_items":
		[
			[
				"com",
				"Git: Commit"
			],
			[
				"add",
				"Git: Add All"
			],
			[
				"comm",
				"Git: Commit"
			],
			[
				"git:",
				"Git: Add All"
			],
			[
				"ins",
				"Package Control: Install Package"
			],
			[
				"git",
				"Package Control: Add Repository"
			],
			[
				"pa",
				"Package Control: Install Package"
			],
			[
				"inden",
				"Indentation: Reindent Lines"
			],
			[
				"Package Control: in",
				"Package Control: Install Package"
			]
		],
		"width": 582.0
	},
	"console":
	{
		"height": 232.0,
		"history":
		[
			"print \"hello\"",
			"git log"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/C/Users/Iain Forrest/Dropbox/projects/recommedia",
		"/C/Users/Iain Forrest/Dropbox/projects/recommedia/offline",
		"/C/Users/Iain Forrest/Dropbox/projects/recommedia/templates"
	],
	"file_history":
	[
		"/C/Users/Iain Forrest/Dropbox/projects/recommedia/offline/books so far",
		"/C/Users/Iain Forrest/Dropbox/projects/recommedia/offline/html/stan.html",
		"/C/Users/Iain Forrest/Dropbox/projects/recommedia/offline/podcast-recommendations - Testing.py",
		"/C/Users/Iain Forrest/dropbox/projects/reflections/lesson_2_reflections.txt",
		"/C/Users/Iain Forrest/dropbox/projects/reflections/lesson_3_reflections.txt",
		"/C/Users/Iain Forrest/Dropbox/projects/recommedia/offline/html/bryan-callen.html",
		"/C/Users/Iain Forrest/Documents/study/projects/ferriss books/offline/podcast-recommendations - Testing.py",
		"/C/Users/Iain Forrest/Documents/study/projects/ferriss books/recommedia/podcast-recommendations - Testing.py",
		"/C/random/Love the Coopers (2015).720p.BluRay.x264.mkv/Keys.nfo",
		"/C/Users/Iain Forrest/Documents/study/projects/ferriss books/recommedia/intro-programming.py",
		"/C/Users/Iain Forrest/Documents/study/projects/ferriss books/offline/html/Jamie Foxx on Workout Routines, Success Habits, and Untold Hollywood Stories _ The Blog of Author Tim Ferriss.html",
		"/C/Users/Iain Forrest/Documents/study/projects/ferriss books/offline/html/Derek Sivers Reloaded.html",
		"/C/Users/Iain Forrest/Documents/study/projects/ferriss books/podcast-recommendations/index.yaml",
		"/C/Users/Iain Forrest/Documents/study/projects/ferriss books/podcast-recommendations/app.yaml",
		"/C/Users/Iain Forrest/Documents/study/projects/ferriss books/podcast-recommendations/cron.yaml",
		"/C/Users/Iain Forrest/Documents/study/projects/ferriss books/podcast-recommendations/main.py",
		"/C/Users/Iain Forrest/Documents/study/projects/ferriss books/podcast-recommendations/favicon.ico",
		"/C/Users/Iain Forrest/Documents/study/Udacity/intro to Programming/stage 5/proj 5/templates/stage1.html",
		"/C/Users/Iain Forrest/Documents/study/Udacity/intro to Programming/stage 5/proj 5/templates/stage3.html",
		"/C/random/Windows 7 Ultimate Sp1 x64 En-Us ESD July 2015 Pre-Activation=-{TEAM OS}=-/Win_7_ Ultimate_ Sp1_ En-Us_ July_ 2015_ x64.iso.md5",
		"/C/Users/Iain Forrest/Documents/study/Udacity/intro comp science/iain_forrest_socialnetwork.py",
		"/C/Users/Iain Forrest/Documents/study/Udacity/intro comp science/gamers network.py",
		"/C/Users/Iain Forrest/Documents/study/Udacity/intro to Programming/stage 5/ascii chan/ascii-chan-ipnd-incomplete/index.yaml",
		"/C/Users/Iain Forrest/Documents/study/Udacity/intro to Programming/stage 5/ascii chan/ascii-chan-ipnd-incomplete/main.py",
		"/C/Users/Iain Forrest/Documents/study/Udacity/intro to Programming/stage 5/ascii chan/ascii-chan-ipnd-incomplete/app.yaml",
		"/C/Users/Iain Forrest/Documents/study/Udacity/intro to Programming/stage 5/javascript.html",
		"/C/Users/Iain Forrest/Documents/study/Udacity/intro to Programming/stage 5/frontend-nanodegree-resume-master/index.html",
		"/C/Users/Iain Forrest/Documents/study/Udacity/intro to Programming/proj 4/intro-programming.py",
		"/C/Users/Iain Forrest/Documents/study/Udacity/intro to Programming/proj 4/app.yaml",
		"/C/Users/Iain Forrest/Documents/study/Udacity/intro to Programming/proj 4/stylesheets/style.css",
		"/C/Users/Iain Forrest/Documents/study/Udacity/intro to Programming/proj 4/Templates/default_.html",
		"/C/Users/Iain Forrest/Documents/study/Udacity/intro to Programming/Stage 4/forms.html",
		"/C/Users/Iain Forrest/Documents/study/Udacity/intro to Programming/proj 4/Templates/stage4.html",
		"/C/Users/Iain Forrest/Documents/study/Udacity/intro to Programming/proj 4/Templates/stage3.html",
		"/C/Users/Iain Forrest/Documents/study/Udacity/intro to Programming/proj 4/Templates/stage2.html",
		"/C/Users/Iain Forrest/Documents/study/Udacity/intro to Programming/proj 4/Templates/stage1.html",
		"/C/Users/Iain Forrest/Documents/study/Udacity/intro to Programming/proj 4/Templates/adminUI.html",
		"/C/Users/Iain Forrest/Documents/study/Udacity/intro to Programming/proj 4/Templates/base.html",
		"/C/Users/Iain Forrest/Documents/study/Udacity/intro to Programming/proj 4/Templates/header.html",
		"/C/Users/Iain Forrest/Documents/study/Udacity/intro to Programming/proj 4/Templates/comments.html",
		"/C/Users/Iain Forrest/Documents/study/Udacity/intro to Programming/Stage 4/helloworld/app.yaml",
		"/C/Users/Iain Forrest/Documents/study/Udacity/intro to Programming/Stage 4/wallbook/wallbook.py",
		"/C/Users/Iain Forrest/Documents/study/Udacity/intro to Programming/proj 4/intro-programming-old.py",
		"/C/Users/Iain Forrest/Documents/study/Udacity/intro to Programming/Stage 4/Using Templates/using-templates.py",
		"/C/Users/Iain Forrest/Documents/study/Udacity/intro to Programming/proj 2/index.html",
		"/C/Users/Iain Forrest/Documents/study/Udacity/intro to Programming/proj 4/style.css",
		"/C/Users/Iain Forrest/Documents/study/Udacity/intro to Programming/proj 4/index.html",
		"/C/Users/Iain Forrest/Documents/study/Udacity/intro to Programming/proj 4/jinja-handler.py",
		"/C/Users/Iain Forrest/Documents/study/Udacity/intro to Programming/proj 4/Templates/stage.html",
		"/C/Users/Iain Forrest/Documents/study/Udacity/intro to Programming/Stage 4/Using Templates/templates/shopping-list.html",
		"/C/Users/Iain Forrest/Documents/study/Udacity/intro to Programming/Stage 4/Using Templates/templates/base.html",
		"/C/Users/Iain Forrest/Documents/study/Udacity/intro to Programming/proj 4/menu.html",
		"/C/Users/Iain Forrest/Documents/study/Udacity/intro to Programming/Stage 4/Using Templates/templates/fizzbuzz.html",
		"/C/Users/Iain Forrest/Documents/study/Udacity/intro to Programming/Stage 4/Using Templates/app.yaml",
		"/C/random/forms.html",
		"/C/Users/Iain Forrest/Documents/study/python/Basic Jinja Setup/using-templates.py",
		"/C/Users/Iain Forrest/Documents/study/Udacity/intro to Programming/Stage 4/Using Templates/templates/form.html",
		"/C/Users/Iain Forrest/Documents/study/Udacity/intro to Programming/Stage 4/Using Templates/using_templates.py",
		"/C/Users/Iain Forrest/Documents/study/Udacity/intro to Programming/Stage 4/Using Templates/main.py",
		"/C/Users/Iain Forrest/Documents/study/Udacity/intro to Programming/Stage 4/helloworld/helloworld.py",
		"/C/Users/Iain Forrest/Documents/company/SPENDMONEY.TXT",
		"/C/Users/Iain Forrest/Documents/company/pocketsmith-search-t.txt",
		"/C/Users/Iain Forrest/Documents/company/test.txt",
		"/C/Users/Iain Forrest/Documents/company/SPENDMONEY-new.txt",
		"/C/Users/Iain Forrest/Documents/company/pocketsmith-search -txt.txt",
		"/C/Users/Iain Forrest/Documents/study/Udacity/intro to Programming/proj 2/example.py",
		"/C/Users/Iain Forrest/AppData/Roaming/Sublime Text 3/Packages/User/Preferences.sublime-settings",
		"/C/Python27/Scripts/twilio/rest/client.py",
		"/C/Users/Iain Forrest/Documents/study/Udacity/intro to Programming/stage 3/countries.csv",
		"/C/Users/Iain Forrest/AppData/Roaming/Sublime Text 3/Packages/Default/Preferences.sublime-settings",
		"/C/Users/Iain Forrest/AppData/Roaming/Sublime Text 3/Packages/User/Chrome.sublime-build",
		"/C/Users/Iain Forrest/AppData/Roaming/Sublime Text 3/Packages/Package Control/Package Control.sublime-settings"
	],
	"find":
	{
		"height": 27.0
	},
	"find_in_files":
	{
		"height": 117.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"2",
			"comment",
			"logging",
			"json",
			"scrolltop",
			"urllib",
			"-3",
			"less-4-3",
			"ss-4-3",
			"e1",
			"</p>",
			"<p>",
			"</p>",
			"<p>",
			"</p>",
			"<p>",
			"</p>",
			"<p>",
			"</p>",
			"<p>",
			"</p>",
			"<p>",
			"</p>",
			"<p>",
			"td",
			" width=\"376\"",
			"</p>",
			"<p>",
			"table",
			" width=\"106\"",
			" width=\"76\"",
			"td",
			"</p>",
			"<p>",
			"p",
			"&#125;",
			"&#123;",
			"&lsquo;",
			"}",
			"{",
			"&rdquo;",
			"&rsquo;",
			"h4",
			"h2",
			"div",
			"<span >",
			"commentsforhtml",
			"Person",
			"coment",
			"guestbook",
			"guest",
			"greeting",
			"Greeting",
			"greeting",
			"Greeting",
			"greeting",
			"guestbook",
			"GUESTBOOK",
			"guestbook",
			"GUESTBOOK",
			"guestbook",
			"Guestbook",
			"guestbook",
			"GUESTBOOK",
			"guestbook",
			"Guestbook",
			"guestbook",
			"Guestbook",
			"guestbook",
			"Guestbook",
			"guestbook",
			"Guestbook",
			"guestbook",
			"guestbook_name",
			"GUESTBOOK_NAME",
			"greeting",
			"cgi",
			"path",
			"#less-3",
			"#less-2",
			"#less-1",
			"less-1",
			"roman",
			"auto",
			"ol",
			"LIMITED",
			"-",
			",,,,",
			"h1, h2, p",
			"H2",
			"H1",
			"population",
			"growth_rate",
			"max_height",
			"grow_taller",
			"Human",
			"human",
			"white",
			"h3",
			"'",
			"<p>",
			"h3",
			"number",
			"ul",
			"u",
			"white",
			"p"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"",
			"'",
			"&#125;",
			"&#123;",
			"\"",
			"'"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 3,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "templates/base.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 497,
						"regions":
						{
						},
						"selection":
						[
							[
								57,
								57
							]
						],
						"settings":
						{
							"is_xml": false,
							"syntax": "Packages/HTML/HTML.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "templates/header.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 660,
						"regions":
						{
						},
						"selection":
						[
							[
								96,
								96
							]
						],
						"settings":
						{
							"is_xml": false,
							"syntax": "Packages/HTML/HTML.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "templates/home.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 478,
						"regions":
						{
						},
						"selection":
						[
							[
								474,
								474
							]
						],
						"settings":
						{
							"is_xml": false,
							"syntax": "Packages/HTML/HTML.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "templates/references.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 674,
						"regions":
						{
						},
						"selection":
						[
							[
								536,
								558
							]
						],
						"settings":
						{
							"is_xml": false,
							"syntax": "Packages/HTML/HTML.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "db_classes.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1455,
						"regions":
						{
						},
						"selection":
						[
							[
								1454,
								1454
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				}
			]
		},
		{
			"selected": 1,
			"sheets":
			[
				{
					"buffer": 5,
					"file": "cron.yaml",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 132,
						"regions":
						{
						},
						"selection":
						[
							[
								132,
								132
							]
						],
						"settings":
						{
							"syntax": "Packages/YAML/YAML.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "main.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2427,
						"regions":
						{
						},
						"selection":
						[
							[
								1990,
								1990
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 576.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "recommedia.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8999,
						"regions":
						{
						},
						"selection":
						[
							[
								2002,
								2002
							]
						],
						"settings":
						{
							"is_xml": false,
							"syntax": "Packages/Python/Python.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 810.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "app.yaml",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 459,
						"regions":
						{
						},
						"selection":
						[
							[
								23,
								23
							]
						],
						"settings":
						{
							"syntax": "Packages/YAML/YAML.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "stylesheets/style.css",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2475,
						"regions":
						{
						},
						"selection":
						[
							[
								462,
								462
							]
						],
						"settings":
						{
							"syntax": "Packages/CSS/CSS.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 270.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 26.0
	},
	"input":
	{
		"height": 36.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				1,
				0,
				2,
				1
			]
		],
		"cols":
		[
			0.0,
			0.5,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 30.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.git":
	{
		"height": 53.0
	},
	"pinned_build_system": "Packages/User/Chrome.sublime-build",
	"project": "podcast-recommendations.sublime-project",
	"replace":
	{
		"height": 80.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 348.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
